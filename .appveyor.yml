environment:
  CMAKE_SCRIPT: >
    cmake "-G%GENERATOR%" "-DHUNTER_ENABLED=%HUNTER%" . &&
    cmake --build . --target iceball &&
    cmake --build . --target iceball-dedi

  matrix:
    - GENERATOR: "MSYS Makefiles"
      HUNTER: "OFF"
      MSYS2_ARCH: x86_64
      MSYSTEM: mingw64

    - GENERATOR: "MSYS Makefiles"
      HUNTER: "OFF"
      MSYS2_ARCH: i686
      MSYSTEM: mingw32

    - GENERATOR: "MinGW Makefiles"
      HUNTER: "ON"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      GENERATOR: "Visual Studio 15 2017 Win64"
      HUNTER: "ON"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      GENERATOR: "Visual Studio 14 2015 Win64"
      HUNTER: "ON"

before_build:
  # Workaround for CMake complaining about sh.exe being in PATH
  - set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - set PATH=%PATH%;C:\MinGW\bin;
  # Set up MSYS2
  - if "%GENERATOR%" == "MSYS Makefiles" (
      set PATH=C:\msys64\%MSYSTEM%\bin;C:\msys64\usr\bin;%PATH% &&
      set PACMAN=pacman --noconfirm --noprogressbar &&
      set MINGW_PACKAGE_PREFIX=mingw-w64-%MSYS2_ARCH%
    )

  # Need seperate blocks for the environment variable to take effect
  - if "%GENERATOR%" == "MSYS Makefiles" (
      bash -lc "%PACMAN% -Syu" &&
      bash -lc "%PACMAN% -Su" &&
      bash -lc "%PACMAN% -S %MINGW_PACKAGE_PREFIX%-cmake" &&
      bash -lc "%PACMAN% -S %MINGW_PACKAGE_PREFIX%-SDL2" &&
      bash -lc "%PACMAN% -S %MINGW_PACKAGE_PREFIX%-luajit-git" &&
      bash -lc "%PACMAN% -S %MINGW_PACKAGE_PREFIX%-enet"
    )

build_script:
    if "%GENERATOR%" == "MSYS Makefiles" (
      bash -lc "%CMAKE_SCRIPT%"
    ) else (
      cmd /C "%CMAKE_SCRIPT%"
    )
