environment:
  CMAKE_SCRIPT: >
    cmake "-G%GENERATOR%" "-DHUNTER_ENABLED=%HUNTER%" . &&
    cmake --build . --target iceball &&
    cmake --build . --target iceball-dedi

  matrix:
    - GENERATOR: "MSYS Makefiles"
      HUNTER: "OFF"
      MSYS2_ARCH: x86_64
      MSYSTEM: mingw64

    - GENERATOR: "MSYS Makefiles"
      HUNTER: "OFF"
      MSYS2_ARCH: i686
      MSYSTEM: mingw32

    - GENERATOR: "MinGW Makefiles"
      HUNTER: "ON"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      GENERATOR: "Visual Studio 15 2017 Win64"
      HUNTER: "ON"

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      GENERATOR: "Visual Studio 14 2015 Win64"
      HUNTER: "ON"

before_build:
  # Workaround for CMake complaining about sh.exe being in PATH
  - set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
  - set PATH=%PATH%;C:\MinGW\bin;
  # Set up MSYS2
  # Stupid cmd always fails me!!!!!!!!!!
  - ps: |
      if ($env:GENERATOR -eq "MSYS Makefiles")
      {
        $env:PATH = "C:\msys64\%MSYSTEM%\bin;C:\msys64\usr\bin;$env:PATH";
        $env:PACMAN = "pacman --noconfirm --noprogressbar";
        $env:MINGW_PACKAGE_PREFIX = "mingw-w64-$env:MSYS2_ARCH";
        bash -lc "$env:PACMAN -Syu";
        bash -lc "$env:PACMAN -Su";
        bash -lc "$env:PACMAN -S $env:MINGW_PACKAGE_PREFIX-cmake";
        bash -lc "$env:PACMAN -S $env:MINGW_PACKAGE_PREFIX-SDL2";
        bash -lc "$env:PACMAN -S $env:MINGW_PACKAGE_PREFIX-luajit-git";
        bash -lc "$env:PACMAN -S $env:MINGW_PACKAGE_PREFIX-en";
      }

build_script:
    if "%GENERATOR%" == "MSYS Makefiles" (
      bash -lc "%CMAKE_SCRIPT%"
    ) else (
      cmd /C "%CMAKE_SCRIPT%"
    )
